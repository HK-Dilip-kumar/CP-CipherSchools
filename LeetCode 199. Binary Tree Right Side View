class Solution {
public:
    vector<int>res;
    void levelOrderTraversal(TreeNode* root){
        if(!root)return;
        queue<TreeNode*>q;
        q.push(root);
        q.push(NULL);
        while(!q.empty()){
            TreeNode* top_e = q.front();
            while(top_e!=NULL){
                if(top_e->left){
                    q.push(top_e->left);
                }
                if(top_e->right){
                    q.push(top_e->right);
                }
                int num = top_e->val;
                q.pop();
                top_e = q.front();
                if(top_e==NULL){
                    res.push_back(num);
                }
            }
            q.pop();
            if(q.empty()){
                break;
            }
            q.push(NULL);
        }
        return;
    }
    
    vector<int> rightSideView(TreeNode* root) {
        levelOrderTraversal(root);
        return res;
    }
};
